import{o as n,c as s,a}from"./app.016600e8.js";const t='{"title":"Fetching resources","description":"","frontmatter":{},"headers":[{"level":2,"title":"Find by id","slug":"find-by-id"},{"level":2,"title":"Find all","slug":"find-all"},{"level":2,"title":"Find by","slug":"find-by"},{"level":2,"title":"Including associations","slug":"including-associations"},{"level":2,"title":"Sparse fieldsets","slug":"sparse-fieldsets"},{"level":2,"title":"Filtering data","slug":"filtering-data"},{"level":2,"title":"Sorting results","slug":"sorting-results"},{"level":2,"title":"Pagination","slug":"pagination"},{"level":2,"title":"Fetching related resources","slug":"fetching-related-resources"}],"relativePath":"guide/concepts/fetching-resources.md","lastUpdated":1627378653998}',p={},o=a('<h1 id="fetching-resources"><a class="header-anchor" href="#fetching-resources" aria-hidden="true">#</a> Fetching resources</h1><h2 id="find-by-id"><a class="header-anchor" href="#find-by-id" aria-hidden="true">#</a> Find by id</h2><p>To find a resource by id, use the <code>find</code> method on a resource:</p><div class="language-ts"><pre><code><span class="token keyword">import</span> <span class="token punctuation">{</span> Skus <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@atoms-studio/commercelayer-sdk&#39;</span>\n\n<span class="token keyword">await</span> Skus<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token string">&#39;nkGgSEKLqn&#39;</span><span class="token punctuation">)</span>\n</code></pre></div><p>To pass additional query parameters, like the inclusion of relationships, pass a second parameter:</p><div class="language-ts"><pre><code><span class="token keyword">import</span> <span class="token punctuation">{</span> Skus <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@atoms-studio/commercelayer-sdk&#39;</span>\n\n<span class="token keyword">await</span> Skus<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token string">&#39;nkGgSEKLqn&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n  include<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;prices&#39;</span><span class="token punctuation">]</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre></div><p>The <code>find</code> method returns a promise that resolves to a resource object, or null if the resource is not found.<br> A resource object is a plain object that contains all attributes of the resource and also all relationships included in the query:</p><div class="language-ts"><pre><code><span class="token punctuation">{</span>\n  code<span class="token operator">:</span> <span class="token string">&quot;808811825&quot;</span><span class="token punctuation">,</span>\n  created_at<span class="token operator">:</span> <span class="token string">&quot;2020-12-15T15:30:22.378Z&quot;</span><span class="token punctuation">,</span>\n  description<span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span>\n  do_not_ship<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n  do_not_track<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n  hs_tariff_number<span class="token operator">:</span> <span class="token string">&quot;61091000&quot;</span><span class="token punctuation">,</span>\n  id<span class="token operator">:</span> <span class="token string">&quot;nkGgSEKLqn&quot;</span><span class="token punctuation">,</span>\n  image_url<span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span>\n  meta<span class="token operator">:</span> <span class="token punctuation">{</span>\n    mode<span class="token operator">:</span> <span class="token string">&quot;test&quot;</span><span class="token punctuation">,</span> organization_id<span class="token operator">:</span> <span class="token string">&quot;asdasdsad&quot;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  metadata<span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token keyword">class</span><span class="token operator">:</span> <span class="token string">&quot;335&quot;</span><span class="token punctuation">,</span> event<span class="token operator">:</span> <span class="token string">&quot;B6&quot;</span><span class="token punctuation">,</span> colour<span class="token operator">:</span> <span class="token string">&quot;1200&quot;</span><span class="token punctuation">,</span> pro_65<span class="token operator">:</span> <span class="token string">&quot;N&quot;</span><span class="token punctuation">,</span> season<span class="token operator">:</span> <span class="token string">&quot;20193&quot;</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  name<span class="token operator">:</span> <span class="token string">&quot;UJCA0LPZ6001200-2-t-shirt-pz600-graphite-l&quot;</span><span class="token punctuation">,</span>\n  pieces_per_pack<span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span>\n  reference<span class="token operator">:</span> <span class="token string">&quot;&quot;</span>\n  reference_origin<span class="token operator">:</span> <span class="token keyword">null</span>\n  unit_of_weight<span class="token operator">:</span> <span class="token string">&quot;gr&quot;</span>\n  updated_at<span class="token operator">:</span> <span class="token string">&quot;2021-02-18T12:05:26.205Z&quot;</span>\n  weight<span class="token operator">:</span> <span class="token number">150</span>\n<span class="token punctuation">}</span>\n</code></pre></div><h2 id="find-all"><a class="header-anchor" href="#find-all" aria-hidden="true">#</a> Find all</h2><p>To find all resources that match a query, use the <code>findAll</code> method on a resource:</p><div class="language-ts"><pre><code><span class="token keyword">import</span> <span class="token punctuation">{</span> Skus <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@atoms-studio/commercelayer-sdk&#39;</span>\n\n<span class="token keyword">await</span> Skus<span class="token punctuation">.</span><span class="token function">findAll</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  filter<span class="token operator">:</span> <span class="token punctuation">{</span>\n    code_start<span class="token operator">:</span> <span class="token string">&#39;808811&#39;</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre></div><p>The <code>findAll</code> method returns a promise that resolves to a resource pagination object, containing the resources plus information about pagination:</p><div class="language-ts"><pre><code><span class="token punctuation">{</span>\n  items<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token operator">...</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n  currentPage<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\n  prevPage<span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span>\n  nextPage<span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>\n  lastPage<span class="token operator">:</span> <span class="token number">4</span><span class="token punctuation">,</span>\n  hasMore<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span>\n</code></pre></div><h2 id="find-by"><a class="header-anchor" href="#find-by" aria-hidden="true">#</a> Find by</h2><p>To find a single resource by a specific query, use the <code>findBy</code> method on a resource:</p><div class="language-ts"><pre><code><span class="token keyword">import</span> <span class="token punctuation">{</span> Skus <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@atoms-studio/commercelayer-sdk&#39;</span>\n\n<span class="token keyword">await</span> Skus<span class="token punctuation">.</span><span class="token function">findBy</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  filter<span class="token operator">:</span> <span class="token punctuation">{</span>\n    code_eq<span class="token operator">:</span> <span class="token string">&#39;808811825&#39;</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre></div><p>The <code>findBy</code> method returns a promise that resolves to a resource object, or null if the resource is not found.</p><h2 id="including-associations"><a class="header-anchor" href="#including-associations" aria-hidden="true">#</a> Including associations</h2><p>To include relationships when fetching resources, use the <code>include</code> option, passing an array of relationship names:</p><div class="language-ts"><pre><code><span class="token keyword">import</span> <span class="token punctuation">{</span> Skus <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@atoms-studio/commercelayer-sdk&#39;</span>\n\n<span class="token keyword">await</span> Skus<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token string">&#39;nkGgSEKLqn&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n  include<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;prices&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;prices.price_list&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token keyword">await</span> Skus<span class="token punctuation">.</span><span class="token function">findBy</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  include<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;prices&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;prices.price_list&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token keyword">await</span> Skus<span class="token punctuation">.</span><span class="token function">findAll</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  include<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;prices&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;prices.price_list&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre></div><p>The resulting resource object will contain all included relationships in addition to its own attributes.</p><h2 id="sparse-fieldsets"><a class="header-anchor" href="#sparse-fieldsets" aria-hidden="true">#</a> Sparse fieldsets</h2><p>To return only specific fields of a resource, use the <code>fields</code> option, passing an object with the list of fields for each type of resource:</p><div class="language-ts"><pre><code><span class="token keyword">import</span> <span class="token punctuation">{</span> Skus <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@atoms-studio/commercelayer-sdk&#39;</span>\n\n<span class="token keyword">await</span> Skus<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token string">&#39;nkGgSEKLqn&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n  include<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;prices&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n  fields<span class="token operator">:</span> <span class="token punctuation">{</span>\n    skus<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;code&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;name&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n    prices<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;formatted_amount&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;amount_float&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token keyword">await</span> Skus<span class="token punctuation">.</span><span class="token function">findBy</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  include<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;prices&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n  fields<span class="token operator">:</span> <span class="token punctuation">{</span>\n    skus<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;code&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;name&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n    prices<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;formatted_amount&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;amount_float&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token keyword">await</span> Skus<span class="token punctuation">.</span><span class="token function">findAll</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  include<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;prices&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n  fields<span class="token operator">:</span> <span class="token punctuation">{</span>\n    skus<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;code&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;name&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n    prices<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;formatted_amount&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;amount_float&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre></div><h2 id="filtering-data"><a class="header-anchor" href="#filtering-data" aria-hidden="true">#</a> Filtering data</h2><p>To filter data, use the <code>filter</code> option, passing an object with the filters to apply:</p><div class="language-ts"><pre><code><span class="token keyword">import</span> <span class="token punctuation">{</span> Skus <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@atoms-studio/commercelayer-sdk&#39;</span>\n\n<span class="token keyword">await</span> Skus<span class="token punctuation">.</span><span class="token function">findAll</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  filter<span class="token operator">:</span> <span class="token punctuation">{</span>\n    code_start<span class="token operator">:</span> <span class="token string">&#39;808811&#39;</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n<span class="token keyword">await</span> Skus<span class="token punctuation">.</span><span class="token function">findBy</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  filter<span class="token operator">:</span> <span class="token punctuation">{</span>\n    code_eq<span class="token operator">:</span> <span class="token string">&#39;808811825&#39;</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre></div><p>To see the list of available filters and their format, check out the <a href="https://developers.commerce.com/docs/api/resources/sku" target="_blank" rel="noopener noreferrer">Commercelayer API documentation</a>.</p><h2 id="sorting-results"><a class="header-anchor" href="#sorting-results" aria-hidden="true">#</a> Sorting results</h2><p>To sort results, use the <code>sort</code> option, passing an array of fields to sort by:</p><div class="language-ts"><pre><code><span class="token keyword">import</span> <span class="token punctuation">{</span> Skus <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@atoms-studio/commercelayer-sdk&#39;</span>\n\n<span class="token keyword">await</span> Skus<span class="token punctuation">.</span><span class="token function">findAll</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  sort<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;-created_at&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;code&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n<span class="token keyword">await</span> Skus<span class="token punctuation">.</span><span class="token function">findBy</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  sort<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;-created_at&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;code&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre></div><h2 id="pagination"><a class="header-anchor" href="#pagination" aria-hidden="true">#</a> Pagination</h2><p>To apply pagination to a request, pass the <code>page</code> option:</p><div class="language-ts"><pre><code><span class="token keyword">import</span> <span class="token punctuation">{</span> Skus <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@atoms-studio/commercelayer-sdk&#39;</span>\n\n<span class="token keyword">await</span> Skus<span class="token punctuation">.</span><span class="token function">findAll</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  page<span class="token operator">:</span> <span class="token punctuation">{</span>\n    size<span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span>\n    <span class="token builtin">number</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n<span class="token keyword">await</span> Skus<span class="token punctuation">.</span><span class="token function">findBy</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  page<span class="token operator">:</span> <span class="token punctuation">{</span>\n    size<span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span>\n    <span class="token builtin">number</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre></div><h2 id="fetching-related-resources"><a class="header-anchor" href="#fetching-related-resources" aria-hidden="true">#</a> Fetching related resources</h2><p>To fetch resources related to another resource, use the <code>relatedTo</code> option passing a resource instance:</p><div class="language-ts"><pre><code><span class="token keyword">import</span> <span class="token punctuation">{</span> Orders<span class="token punctuation">,</span> Auth <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@atoms-studio/commercelayer-sdk&#39;</span>\n\n<span class="token keyword">const</span> customer <span class="token operator">=</span> Auth<span class="token punctuation">.</span><span class="token function">getProfile</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n<span class="token keyword">await</span> Orders<span class="token punctuation">.</span><span class="token function">findAll</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  relatedTo<span class="token operator">:</span> customer<span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre></div>',37);p.render=function(a,t,p,e,c,u){return n(),s("div",null,[o])};export default p;export{t as __pageData};
